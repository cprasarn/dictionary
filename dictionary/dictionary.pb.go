// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: dictionary/dictionary.proto

package dictionary

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DictionaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word string `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
}

func (x *DictionaryRequest) Reset() {
	*x = DictionaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_dictionary_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictionaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictionaryRequest) ProtoMessage() {}

func (x *DictionaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_dictionary_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictionaryRequest.ProtoReflect.Descriptor instead.
func (*DictionaryRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_dictionary_proto_rawDescGZIP(), []int{0}
}

func (x *DictionaryRequest) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

type ErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Resolution string `protobuf:"bytes,3,opt,name=resolution,proto3" json:"resolution,omitempty"`
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_dictionary_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_dictionary_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_dictionary_dictionary_proto_rawDescGZIP(), []int{1}
}

func (x *ErrorResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ErrorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorResponse) GetResolution() string {
	if x != nil {
		return x.Resolution
	}
	return ""
}

type License struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *License) Reset() {
	*x = License{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_dictionary_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *License) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*License) ProtoMessage() {}

func (x *License) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_dictionary_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use License.ProtoReflect.Descriptor instead.
func (*License) Descriptor() ([]byte, []int) {
	return file_dictionary_dictionary_proto_rawDescGZIP(), []int{2}
}

func (x *License) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *License) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Phonetic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text      *string  `protobuf:"bytes,1,opt,name=text,proto3,oneof" json:"text,omitempty"`
	Audio     *string  `protobuf:"bytes,2,opt,name=audio,proto3,oneof" json:"audio,omitempty"`
	SourceUrl *string  `protobuf:"bytes,3,opt,name=sourceUrl,proto3,oneof" json:"sourceUrl,omitempty"`
	License   *License `protobuf:"bytes,4,opt,name=license,proto3,oneof" json:"license,omitempty"`
}

func (x *Phonetic) Reset() {
	*x = Phonetic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_dictionary_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Phonetic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Phonetic) ProtoMessage() {}

func (x *Phonetic) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_dictionary_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Phonetic.ProtoReflect.Descriptor instead.
func (*Phonetic) Descriptor() ([]byte, []int) {
	return file_dictionary_dictionary_proto_rawDescGZIP(), []int{3}
}

func (x *Phonetic) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *Phonetic) GetAudio() string {
	if x != nil && x.Audio != nil {
		return *x.Audio
	}
	return ""
}

func (x *Phonetic) GetSourceUrl() string {
	if x != nil && x.SourceUrl != nil {
		return *x.SourceUrl
	}
	return ""
}

func (x *Phonetic) GetLicense() *License {
	if x != nil {
		return x.License
	}
	return nil
}

type Definition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Definition string   `protobuf:"bytes,1,opt,name=definition,proto3" json:"definition,omitempty"`
	Synonyms   []string `protobuf:"bytes,2,rep,name=synonyms,proto3" json:"synonyms,omitempty"`
	Antonyms   []string `protobuf:"bytes,3,rep,name=antonyms,proto3" json:"antonyms,omitempty"`
	Example    *string  `protobuf:"bytes,4,opt,name=example,proto3,oneof" json:"example,omitempty"`
}

func (x *Definition) Reset() {
	*x = Definition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_dictionary_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Definition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Definition) ProtoMessage() {}

func (x *Definition) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_dictionary_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Definition.ProtoReflect.Descriptor instead.
func (*Definition) Descriptor() ([]byte, []int) {
	return file_dictionary_dictionary_proto_rawDescGZIP(), []int{4}
}

func (x *Definition) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *Definition) GetSynonyms() []string {
	if x != nil {
		return x.Synonyms
	}
	return nil
}

func (x *Definition) GetAntonyms() []string {
	if x != nil {
		return x.Antonyms
	}
	return nil
}

func (x *Definition) GetExample() string {
	if x != nil && x.Example != nil {
		return *x.Example
	}
	return ""
}

type Meaning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartOfSpeech string        `protobuf:"bytes,1,opt,name=partOfSpeech,proto3" json:"partOfSpeech,omitempty"`
	Definitions  []*Definition `protobuf:"bytes,2,rep,name=definitions,proto3" json:"definitions,omitempty"`
	Synonyms     []string      `protobuf:"bytes,3,rep,name=synonyms,proto3" json:"synonyms,omitempty"`
	Antonyms     []string      `protobuf:"bytes,4,rep,name=antonyms,proto3" json:"antonyms,omitempty"`
}

func (x *Meaning) Reset() {
	*x = Meaning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_dictionary_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meaning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meaning) ProtoMessage() {}

func (x *Meaning) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_dictionary_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meaning.ProtoReflect.Descriptor instead.
func (*Meaning) Descriptor() ([]byte, []int) {
	return file_dictionary_dictionary_proto_rawDescGZIP(), []int{5}
}

func (x *Meaning) GetPartOfSpeech() string {
	if x != nil {
		return x.PartOfSpeech
	}
	return ""
}

func (x *Meaning) GetDefinitions() []*Definition {
	if x != nil {
		return x.Definitions
	}
	return nil
}

func (x *Meaning) GetSynonyms() []string {
	if x != nil {
		return x.Synonyms
	}
	return nil
}

func (x *Meaning) GetAntonyms() []string {
	if x != nil {
		return x.Antonyms
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word       string      `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	Phonetic   string      `protobuf:"bytes,2,opt,name=phonetic,proto3" json:"phonetic,omitempty"`
	Phonetics  []*Phonetic `protobuf:"bytes,3,rep,name=phonetics,proto3" json:"phonetics,omitempty"`
	Meanings   []*Meaning  `protobuf:"bytes,4,rep,name=meanings,proto3" json:"meanings,omitempty"`
	License    *License    `protobuf:"bytes,5,opt,name=license,proto3,oneof" json:"license,omitempty"`
	SourceUrls []string    `protobuf:"bytes,6,rep,name=sourceUrls,proto3" json:"sourceUrls,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_dictionary_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_dictionary_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_dictionary_dictionary_proto_rawDescGZIP(), []int{6}
}

func (x *Response) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *Response) GetPhonetic() string {
	if x != nil {
		return x.Phonetic
	}
	return ""
}

func (x *Response) GetPhonetics() []*Phonetic {
	if x != nil {
		return x.Phonetics
	}
	return nil
}

func (x *Response) GetMeanings() []*Meaning {
	if x != nil {
		return x.Meanings
	}
	return nil
}

func (x *Response) GetLicense() *License {
	if x != nil {
		return x.License
	}
	return nil
}

func (x *Response) GetSourceUrls() []string {
	if x != nil {
		return x.SourceUrls
	}
	return nil
}

type Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output []*Response `protobuf:"bytes,1,rep,name=output,proto3" json:"output,omitempty"`
}

func (x *Output) Reset() {
	*x = Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_dictionary_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_dictionary_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_dictionary_dictionary_proto_rawDescGZIP(), []int{7}
}

func (x *Output) GetOutput() []*Response {
	if x != nil {
		return x.Output
	}
	return nil
}

type DictionaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Noun         *string        `protobuf:"bytes,1,opt,name=noun,proto3,oneof" json:"noun,omitempty"`
	Verb         *string        `protobuf:"bytes,2,opt,name=verb,proto3,oneof" json:"verb,omitempty"`
	Adverb       *string        `protobuf:"bytes,3,opt,name=adverb,proto3,oneof" json:"adverb,omitempty"`
	Adjective    *string        `protobuf:"bytes,4,opt,name=adjective,proto3,oneof" json:"adjective,omitempty"`
	Interjection *string        `protobuf:"bytes,5,opt,name=interjection,proto3,oneof" json:"interjection,omitempty"`
	Error        *ErrorResponse `protobuf:"bytes,6,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *DictionaryResponse) Reset() {
	*x = DictionaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_dictionary_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictionaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictionaryResponse) ProtoMessage() {}

func (x *DictionaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_dictionary_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictionaryResponse.ProtoReflect.Descriptor instead.
func (*DictionaryResponse) Descriptor() ([]byte, []int) {
	return file_dictionary_dictionary_proto_rawDescGZIP(), []int{8}
}

func (x *DictionaryResponse) GetNoun() string {
	if x != nil && x.Noun != nil {
		return *x.Noun
	}
	return ""
}

func (x *DictionaryResponse) GetVerb() string {
	if x != nil && x.Verb != nil {
		return *x.Verb
	}
	return ""
}

func (x *DictionaryResponse) GetAdverb() string {
	if x != nil && x.Adverb != nil {
		return *x.Adverb
	}
	return ""
}

func (x *DictionaryResponse) GetAdjective() string {
	if x != nil && x.Adjective != nil {
		return *x.Adjective
	}
	return ""
}

func (x *DictionaryResponse) GetInterjection() string {
	if x != nil && x.Interjection != nil {
		return *x.Interjection
	}
	return ""
}

func (x *DictionaryResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_dictionary_dictionary_proto protoreflect.FileDescriptor

var file_dictionary_dictionary_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2f, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x22, 0x27, 0x0a, 0x11, 0x44, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0x5f, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x07, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0xc2, 0x01, 0x0a, 0x08, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69,
	0x63, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x61, 0x75,
	0x64, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x48, 0x03,
	0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x0a, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x6f,
	0x6e, 0x79, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x6f,
	0x6e, 0x79, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x79, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x79, 0x6d, 0x73,
	0x12, 0x1d, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x07,
	0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x4f,
	0x66, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x61, 0x72, 0x74, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x12, 0x38, 0x0a, 0x0b, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x79, 0x6d, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x79, 0x6d, 0x73, 0x22, 0xff, 0x01,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x32, 0x0a, 0x09, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x74, 0x69, 0x63, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x73, 0x12, 0x2f,
	0x0a, 0x08, 0x6d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65,
	0x61, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x32, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x72, 0x6c, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x22,
	0x36, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0xab, 0x02, 0x0a, 0x12, 0x44, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17,
	0x0a, 0x04, 0x6e, 0x6f, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x6e, 0x6f, 0x75, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x76, 0x65, 0x72, 0x62, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x76, 0x65, 0x72, 0x62, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x61, 0x64, 0x76, 0x65, 0x72, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x06, 0x61, 0x64, 0x76, 0x65, 0x72, 0x62, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x09, 0x61, 0x64, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x09, 0x61, 0x64, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x27, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x6f, 0x75, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x65, 0x72,
	0x62, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x62, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x61, 0x64, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0x57, 0x0a, 0x0a, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x72, 0x79, 0x12, 0x49, 0x0a, 0x06, 0x4c, 0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x12, 0x1d, 0x2e,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x33,
	0x5a, 0x31, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x70, 0x72, 0x61, 0x73, 0x61, 0x72, 0x6e, 0x2f, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dictionary_dictionary_proto_rawDescOnce sync.Once
	file_dictionary_dictionary_proto_rawDescData = file_dictionary_dictionary_proto_rawDesc
)

func file_dictionary_dictionary_proto_rawDescGZIP() []byte {
	file_dictionary_dictionary_proto_rawDescOnce.Do(func() {
		file_dictionary_dictionary_proto_rawDescData = protoimpl.X.CompressGZIP(file_dictionary_dictionary_proto_rawDescData)
	})
	return file_dictionary_dictionary_proto_rawDescData
}

var file_dictionary_dictionary_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_dictionary_dictionary_proto_goTypes = []interface{}{
	(*DictionaryRequest)(nil),  // 0: dictionary.DictionaryRequest
	(*ErrorResponse)(nil),      // 1: dictionary.ErrorResponse
	(*License)(nil),            // 2: dictionary.License
	(*Phonetic)(nil),           // 3: dictionary.Phonetic
	(*Definition)(nil),         // 4: dictionary.Definition
	(*Meaning)(nil),            // 5: dictionary.Meaning
	(*Response)(nil),           // 6: dictionary.Response
	(*Output)(nil),             // 7: dictionary.Output
	(*DictionaryResponse)(nil), // 8: dictionary.DictionaryResponse
}
var file_dictionary_dictionary_proto_depIdxs = []int32{
	2, // 0: dictionary.Phonetic.license:type_name -> dictionary.License
	4, // 1: dictionary.Meaning.definitions:type_name -> dictionary.Definition
	3, // 2: dictionary.Response.phonetics:type_name -> dictionary.Phonetic
	5, // 3: dictionary.Response.meanings:type_name -> dictionary.Meaning
	2, // 4: dictionary.Response.license:type_name -> dictionary.License
	6, // 5: dictionary.Output.output:type_name -> dictionary.Response
	1, // 6: dictionary.DictionaryResponse.error:type_name -> dictionary.ErrorResponse
	0, // 7: dictionary.Dictionary.LookUp:input_type -> dictionary.DictionaryRequest
	8, // 8: dictionary.Dictionary.LookUp:output_type -> dictionary.DictionaryResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_dictionary_dictionary_proto_init() }
func file_dictionary_dictionary_proto_init() {
	if File_dictionary_dictionary_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dictionary_dictionary_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictionaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_dictionary_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_dictionary_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*License); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_dictionary_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Phonetic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_dictionary_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Definition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_dictionary_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meaning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_dictionary_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_dictionary_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_dictionary_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictionaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dictionary_dictionary_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_dictionary_dictionary_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_dictionary_dictionary_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_dictionary_dictionary_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dictionary_dictionary_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dictionary_dictionary_proto_goTypes,
		DependencyIndexes: file_dictionary_dictionary_proto_depIdxs,
		MessageInfos:      file_dictionary_dictionary_proto_msgTypes,
	}.Build()
	File_dictionary_dictionary_proto = out.File
	file_dictionary_dictionary_proto_rawDesc = nil
	file_dictionary_dictionary_proto_goTypes = nil
	file_dictionary_dictionary_proto_depIdxs = nil
}
